[tool:pytest]
# Pytest configuration for Gotcha Guardian Payment Server

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Output options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --durations=10
    --color=yes
    --disable-warnings
    --cov=src
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=80
    --junitxml=test-results.xml

# Markers
markers =
    unit: Unit tests
    integration: Integration tests
    e2e: End-to-end tests
    slow: Slow running tests
    security: Security-related tests
    payment: Payment processing tests
    database: Database-related tests
    api: API endpoint tests
    email: Email functionality tests
    file: File handling tests
    validation: Input validation tests
    auth: Authentication tests
    admin: Admin functionality tests
    webhook: Webhook tests
    smoke: Smoke tests for basic functionality

# Test environment
env =
    FLASK_ENV = testing
    FLASK_DEBUG = False
    TESTING = True
    WTF_CSRF_ENABLED = False
    DATABASE_PATH = :memory:
    PAYPAL_MODE = sandbox
    RATE_LIMIT_ENABLED = False
    SECURE_HEADERS_ENABLED = False
    EMAIL_ENABLED = False
    LOG_LEVEL = ERROR

# Minimum version requirements
minversion = 7.0

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*unclosed.*:ResourceWarning
    ignore:.*ssl.*:urllib3.exceptions.InsecureRequestWarning

# Test timeout (in seconds)
timeout = 300

# Parallel execution
# Uncomment to enable parallel test execution
# addopts = -n auto

# Coverage options
[coverage:run]
source = src
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */migrations/*
    */venv/*
    */env/*
    setup.py
    run_dev.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml