# Gotcha Guardian Payment Server - Environment Configuration
# Copy this file to .env and fill in your actual values

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================

# Flask application settings
FLASK_ENV=development
FLASK_DEBUG=True
SECRET_KEY=your-super-secret-key-change-this-in-production

# Server configuration
HOST=0.0.0.0
PORT=5000

# Application URLs
BASE_URL=http://localhost:5000
FRONTEND_URL=http://localhost:3000

# =============================================================================
# DATABASE SETTINGS
# =============================================================================

# SQLite database configuration
DATABASE_PATH=./data/payment_server.db
DATABASE_BACKUP_DIR=./backups
DATABASE_BACKUP_INTERVAL=24  # hours
DATABASE_MAX_CONNECTIONS=10

# =============================================================================
# PAYPAL CONFIGURATION
# =============================================================================

# PayPal API credentials (get from PayPal Developer Dashboard)
PAYPAL_CLIENT_ID=your-paypal-client-id
PAYPAL_CLIENT_SECRET=your-paypal-client-secret

# PayPal environment (sandbox or live)
PAYPAL_MODE=sandbox

# PayPal webhook configuration
PAYPAL_WEBHOOK_ID=your-webhook-id
PAYPAL_WEBHOOK_URL=https://yourdomain.com/api/paypal/webhook

# =============================================================================
# EMAIL CONFIGURATION
# =============================================================================

# SMTP server settings
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USE_TLS=True
SMTP_USERNAME=your-email@gmail.com
SMTP_PASSWORD=your-app-password

# Email addresses
FROM_EMAIL=noreply@yourdomain.com
ADMIN_EMAIL=admin@yourdomain.com
SUPPORT_EMAIL=support@yourdomain.com

# Email templates
EMAIL_TEMPLATE_DIR=./templates/email

# =============================================================================
# SECURITY SETTINGS
# =============================================================================

# Encryption settings
ENCRYPTION_KEY=your-32-byte-encryption-key-base64-encoded
JWT_SECRET_KEY=your-jwt-secret-key
JWT_EXPIRATION_HOURS=24

# API security
API_KEY_LENGTH=32
API_KEY_EXPIRATION_DAYS=365

# Rate limiting
RATE_LIMIT_ENABLED=True
RATE_LIMIT_DEFAULT=100 per hour
RATE_LIMIT_PAYMENT=10 per minute
RATE_LIMIT_DOWNLOAD=5 per minute
RATE_LIMIT_CONTACT=3 per minute

# CORS settings
CORS_ORIGINS=http://localhost:3000,https://yourdomain.com
CORS_ALLOW_CREDENTIALS=True

# Security headers
SECURE_HEADERS_ENABLED=True
CSRF_PROTECTION_ENABLED=True

# Session security
SESSION_COOKIE_SECURE=False  # Set to True in production with HTTPS
SESSION_COOKIE_HTTPONLY=True
SESSION_COOKIE_SAMESITE=Lax

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Logging levels: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO
LOG_FORMAT=detailed  # simple, detailed, json

# Log file settings
LOG_DIR=./logs
LOG_MAX_SIZE=10485760  # 10MB
LOG_BACKUP_COUNT=5
LOG_ROTATION_WHEN=midnight

# Specific log files
APP_LOG_FILE=app.log
ERROR_LOG_FILE=error.log
SECURITY_LOG_FILE=security.log
PAYMENT_LOG_FILE=payment.log

# Console logging
CONSOLE_LOG_ENABLED=True
CONSOLE_LOG_LEVEL=INFO

# =============================================================================
# FILE STORAGE SETTINGS
# =============================================================================

# Product files directory
PRODUCT_FILES_DIR=./products
DOWNLOAD_TEMP_DIR=./temp/downloads

# File upload settings
MAX_UPLOAD_SIZE=104857600  # 100MB
ALLOWED_EXTENSIONS=exe,zip,rar,7z,msi,dmg,pkg,deb,rpm

# Download settings
DOWNLOAD_TOKEN_EXPIRATION=3600  # 1 hour
MAX_DOWNLOAD_ATTEMPTS=3
DOWNLOAD_RATE_LIMIT=1048576  # 1MB/s

# =============================================================================
# PRODUCT CONFIGURATION
# =============================================================================

# Product definitions file
PRODUCT_CONFIG_FILE=./config/products.json

# Default product settings
DEFAULT_PRODUCT_PRICE=29.99
DEFAULT_CURRENCY=USD
DEFAULT_LICENSE_DURATION=365  # days

# Activation key settings
ACTIVATION_KEY_LENGTH=16
ACTIVATION_KEY_FORMAT=XXXX-XXXX-XXXX-XXXX
ACTIVATION_KEY_EXPIRATION=365  # days

# =============================================================================
# MONITORING AND ANALYTICS
# =============================================================================

# Health check settings
HEALTH_CHECK_ENABLED=True
HEALTH_CHECK_INTERVAL=300  # 5 minutes

# Metrics collection
METRICS_ENABLED=True
METRICS_RETENTION_DAYS=30

# Performance monitoring
PERFORMANCE_MONITORING=True
SLOW_QUERY_THRESHOLD=1.0  # seconds

# =============================================================================
# BACKUP AND MAINTENANCE
# =============================================================================

# Backup settings
BACKUP_ENABLED=True
BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM (cron format)
BACKUP_RETENTION_DAYS=30
BACKUP_COMPRESSION=True

# Maintenance settings
MAINTENANCE_MODE=False
MAINTENANCE_MESSAGE=System is under maintenance. Please try again later.

# Cleanup settings
CLEANUP_TEMP_FILES=True
CLEANUP_OLD_LOGS=True
CLEANUP_INTERVAL=24  # hours

# =============================================================================
# THIRD-PARTY INTEGRATIONS
# =============================================================================

# Analytics (optional)
GOOGLE_ANALYTICS_ID=
GOOGLE_TAG_MANAGER_ID=

# Error tracking (optional)
SENTRY_DSN=
SENTRY_ENVIRONMENT=development

# CDN settings (optional)
CDN_ENABLED=False
CDN_URL=

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Development tools
DEBUG_TOOLBAR_ENABLED=False
PROFILER_ENABLED=False

# Testing settings
TEST_DATABASE_PATH=./data/test_payment_server.db
TEST_EMAIL_BACKEND=console
TEST_PAYPAL_MODE=sandbox

# Mock settings for development
MOCK_PAYPAL=False
MOCK_EMAIL=False
MOCK_FILE_DOWNLOADS=False

# =============================================================================
# PRODUCTION SETTINGS
# =============================================================================

# Production-specific settings (uncomment and configure for production)
# FLASK_ENV=production
# FLASK_DEBUG=False
# SESSION_COOKIE_SECURE=True
# PAYPAL_MODE=live
# LOG_LEVEL=WARNING
# RATE_LIMIT_STRICT=True

# SSL/TLS settings for production
# SSL_CERT_PATH=./ssl/cert.pem
# SSL_KEY_PATH=./ssl/key.pem
# FORCE_HTTPS=True

# Production database (if using PostgreSQL or MySQL)
# DATABASE_URL=postgresql://user:password@localhost/dbname
# DATABASE_URL=mysql://user:password@localhost/dbname

# Production caching (Redis)
# REDIS_URL=redis://localhost:6379/0
# CACHE_TYPE=redis
# CACHE_REDIS_URL=redis://localhost:6379/1

# Production message queue (Celery)
# CELERY_BROKER_URL=redis://localhost:6379/2
# CELERY_RESULT_BACKEND=redis://localhost:6379/3

# =============================================================================
# RAILWAY DEPLOYMENT SETTINGS
# =============================================================================

# Railway automatically provides these variables:
# PORT (automatically set by Railway)
# RAILWAY_ENVIRONMENT (development, staging, production)
# RAILWAY_PROJECT_ID
# RAILWAY_SERVICE_ID
# RAILWAY_DEPLOYMENT_ID

# For Railway deployment, you can override any of the above settings
# Railway will use the PORT variable automatically

# Example Railway production overrides:
# FLASK_ENV=production
# FLASK_DEBUG=False
# LOG_LEVEL=INFO
# PAYPAL_MODE=live
# SESSION_COOKIE_SECURE=True

# =============================================================================
# NOTES
# =============================================================================

# 1. Never commit the actual .env file to version control
# 2. Use strong, unique passwords and keys in production
# 3. Enable HTTPS in production and set SESSION_COOKIE_SECURE=True
# 4. Use environment-specific configurations
# 5. Regularly rotate API keys and secrets
# 6. Monitor logs for security events
# 7. Set up proper backup procedures
# 8. Test all configurations in a staging environment first
# 9. Use Railway's environment variables for sensitive data in production
# 10. Keep this file updated when adding new configuration options